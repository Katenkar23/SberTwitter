dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-data-jdbc',
            'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client',
            'org.springframework.retry:spring-retry',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.postgresql:postgresql:9.4-1206-jdbc42'
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.avast.gradle:gradle-docker-compose-plugin:0.10.9"
    }
}

apply plugin: "com.avast.gradle.docker-compose"

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
    buildBeforeUp = true
    buildBeforePull = true
    ignorePullFailure = false
    ignorePushFailure = false
    pushServices = []
    captureContainersOutput = true
    dockerComposeWorkingDirectory = './src/main/java/ru/sbt/twitter/database/postgres/'
}
build.finalizedBy(composeUp)
